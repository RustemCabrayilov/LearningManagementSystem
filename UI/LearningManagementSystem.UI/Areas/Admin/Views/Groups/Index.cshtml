@model System.Collections.Generic.IList<LearningManagementSystem.Application.Abstractions.Services.Group.GroupResponse>
<link rel="stylesheet" href="~/css/togglebtn.css">

@{
ViewBag.Title = "Group List";
}



<a class="btn btn-primary" asp-action="Create">Create</a>
<table class="table table-hover">
    <thead>
    <tr>
        <th>Id</th>
        <th>Name</th>
        <th>Group Code</th>
        <th>Can Apply</th>
        <th>Edit</th>
        <th>Delete</th>
        <th>Details</th>
        <th>Activate</th> <!-- Add a new column for toggle button -->
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
    <tr>
        <td>@item.Id</td>
        <td>@item.Name</td>
        <td>@item.Code</td>
        <td>@item.CanApply</td>
        <td>
            <a class="btn btn-warning" asp-area="admin" asp-controller="Groups" asp-action="Edit" asp-route-id="@item.Id">
                <i class="far fa-pen-to-square"></i>
            </a>
        </td>
        <td>
            <!-- Button to open modal -->
            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal-@item.Id">
                <i class="fas fa-trash-can"></i>
            </button>
            @await Html.PartialAsync("_Delete",item)
        </td>
        <td>
            <!-- Button to open modal -->
            <button type="button" class="btn btn-danger details-btn" data-bs-toggle="modal" data-bs-target="#detailModal-@item.Id" data-item-id="@item.Id">
                Details
            </button>
            @await Html.PartialAsync("_Details",item)
        </td>
        <td>
            <!-- Toggle Button for Active (Boolean) value -->
            
                
            <label class="switch">
                <a asp-area="Admin" asp-controller="Groups" asp-action="ActivateGroup" asp-route-id="@item.Id">
                <input type="checkbox" class="toggle-btn" @(item.CanApply ? "checked" : "") data-id="@item.Id"/>
                <span class="slider round"></span>
                </a>
            </label>
        </td>
    </tr>
    }
    </tbody>
</table>
<partial name="_Pagination"/>


@section Scripts {
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const detailButtons = document.querySelectorAll('.details-btn');

        detailButtons.forEach(button => {
            button.addEventListener('click', function (e) {
                let lessonId = this.getAttribute('data-item-id'); // Use data-student-id instead of id
                const modalBody = document.querySelector(`#detailModal-${lessonId} .modal-body`);
                console.log(lessonId)
                // Show loading message while fetching data
                modalBody.innerHTML = `<p>Loading...</p>`;

                // Fetch student details from the server
                fetch(`/Admin/Groups/Details?id=${lessonId}`)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data); // Check the structure of the data

                        let content = `
            <h4>Group Info</h4>
            <p><strong>Term:</strong> ${data?.term?.name || 'N/A'}</p>
            <p><strong>Major:</strong> ${data?.major?.title || 'N/A'}</p>
            <p><strong>Subject:</strong> ${data?.subject?.name || 'N/A'}</p>
            <p><strong>Subject Code:</strong> ${data?.subject?.subjectCode || 'N/A'}</p>
            <p><strong>Attendance Limit:</strong> ${data?.subject?.attendanceLimit || 'N/A'}</p>
            <p><strong>Teacher:</strong> ${data?.teacher?.name} ${data?.teacher?.surname}</p>
        `;

                        // Display Exams
                        if (data?.exams && data.exams.length > 0) {
                            content += `<h5>Exams:</h5><ul>`;
                            data.exams.forEach(exam => {
                                content += `
                    <li><strong>Exam Name:</strong> ${exam?.name || 'N/A'}</li>
                    <li><strong>Exam Type:</strong> ${exam?.examType || 'N/A'}</li>
                `;
                            });
                            content += `</ul>`;
                        } else {
                            content += `<p>No exams available</p>`;
                        }

                        // Display Group Schedules
                        if (data?.groupSchedules && data.groupSchedules.length > 0) {
                            content += `<h5>Group Times:</h5><ul>`;
                            data.groupSchedules.forEach(groupSchedule => {
                                content += `
                    <li><strong>Class Time:</strong> ${groupSchedule?.classTime || 'N/A'}</li>
                    <li><strong>Day of Week:</strong> ${groupSchedule?.dayOfWeek || 'N/A'}</li>
                `;
                            });
                            content += `</ul>`;
                        } else {
                            content += `<p>No group schedules available</p>`;
                        }

                        // Update modal body with the final content
                        modalBody.innerHTML = content;

                    })
                    .catch(error => {
                        console.error('Error fetching details:', error);
                        modalBody.innerHTML = `<p>Error loading details.</p>`;
                    });


            });
        });
    });
</script>
}