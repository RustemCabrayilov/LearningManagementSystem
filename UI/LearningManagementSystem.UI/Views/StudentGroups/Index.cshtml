@using LearningManagementSystem.Application.Helper
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model LearningManagementSystem.Application.Abstractions.Services.StudentGroup.StudentGroupResponse

@{
ViewBag.Title = "Assign Groups";
Layout = "_Layout";
}

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Student's Schedule</title>
  <link rel="stylesheet" href="~/css/schedule.css">
</head>
<body>

<div class="container">
  <!-- Left side: Lesson list -->

  <!-- Right side: Weekly Schedule -->
  <div class="schedule">
    <!-- Header for Days of the Week -->
    <div class="header">Time</div>
    <div class="header">Monday</div>
    <div class="header">Tuesday</div>
    <div class="header">Wednesday</div>
    <div class="header">Thursday</div>
    <div class="header">Friday</div>

    <!-- Time Slots and Empty Cells -->
    @foreach (var time in TimeHelper.TimeList)
    {
    <div class="time-slot">@time</div>
    <div class="empty" data-time="@time" data-group-id="" data-day="Monday"></div>
    <div class="empty" data-time="@time" data-group-id="" data-day="Tuesday"></div>
    <div class="empty" data-time="@time" data-group-id="" data-day="Wednesday"></div>
    <div class="empty" data-time="@time" data-group-id="" data-day="Thursday"></div>
    <div class="empty" data-time="@time" data-group-id="" data-day="Friday"></div>
    }
  </div>
</div>

<form id="assignGroupForm">
  <div asp-validation-summary="ModelOnly" class="text-danger"></div>
  <button>Save</button>
</form>

<script>
  const lessonListItems = document.querySelectorAll('.lesson-list li');
  const scheduleCells = document.querySelectorAll('.schedule .empty');
  const groupsData = @Html.Raw(Json.Serialize(ViewBag.Groups)); // Fetch groups data from ViewBag

  // Function to populate the schedule
  function populateSchedule(groupsData) {
    groupsData.forEach(group => {
      // Fetch the schedule for each group
      fetch(`/GroupSchedules/Index?groupId=${group.Id}`)
        .then(response => response.json())
        .then(data => {
          // Iterate over the fetched data and populate the schedule
          data.forEach(groupSchedule => {
            const dayNames = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];
            const lessonDay = dayNames[groupSchedule.dayOfWeek - 1];

            // Find the matching schedule cell for the day and time
            const scheduleCell = document.querySelector(`.schedule .empty[data-day="${lessonDay}"][data-time="${groupSchedule.classTime}"]`);
            if (scheduleCell) {
              scheduleCell.classList.remove('empty');
              scheduleCell.classList.add('lesson');
              scheduleCell.textContent = group.Name;

              // Optionally set data attributes
              scheduleCell.setAttribute('data-group-id', group.Id);
              scheduleCell.setAttribute('data-lesson-name', group.Name);
            }
          });
        })
        .catch(error => console.error('Error fetching schedule data:', error));
    });
  }

  // Populate the schedule on page load
  window.onload = function() {
    populateSchedule(groupsData);
  };
</script>

</body>
